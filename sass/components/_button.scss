.btn {
  &, // just the unlinked, unvisited button
  &:link, // unvisited elments with an href attribute (e.g. <a>)
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    /* this animates all transforms in relation to the initial state */
    transition: all .2;
    position: relative;
    font-size: $default-font-size;

    // Changes for button element
    border: none;
    cursor: pointer;
  }

  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba($color-black, .2);

    /* Apply the ::after css pseudo element when the button is hovered over. 
    The transition on the 'parent' / baseline btn element makes it take 
    0.2 seconds to scale up and fade out to opcaity 0. Don't know why 
    opacity:0 doesn't make the whole button disappear rather than just the 
    scaled up outer part. Must be to do with applying it on ::after which is 
    a pseudo element positioned 'after' the button element.
      */
    &::after, {
      // The button 'expansion and fade' effect.
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }

  &:active,
  &:focus {
    // Remove the focus outline but have something happen when you focus for 
    // accesibiliy reasons.
    outline: none;
    transform: translateY(-1px);
    box-shadow: 0 .5rem 1rem rgba($color-black, .2);
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark-1;

    /* How does this connect to .btn:hover::after ? */
    &::after {
      background-color: $color-white;
    }
  }

  &--green {
    background-color: $color-primary;
    color: $color-white;

    &::after {
      background-color: $color-primary;
    }
  }

  &::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0%;
    left: 0%;
    z-index: -1;
    transition: all 2s;
  }

  &--animated {
    /* animation: name, duration, timing-function, delay */
    animation: moveInBottom .5s ease-out .75s;
    /* At page load, before the animation starts, automatically applies the properties 
       of the 0% state of the moveInBottom animation (i.e. invisible and 30px down from 
       the end position) to the <a> with the .btn-animated class. So the button first 
       appears 30px down and then moves up.*/
    animation-fill-mode: backwards;
  }
}

.btn-text {
  &:link,
  &:visited {
    font-size: $default-font-size;
    color: $color-primary;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid $color-primary;
    padding: 3px;
    transition: all .2s;
  }

  &:hover {
    background-color: $color-primary;
    color: $color-white;
    box-shadow: 0 1rem 2rem rgba($color-black, .15);
    transform: translateY(-2px);
  }

  &:active {
    box-shadow: 0 .5rem 1rem rgba($color-black, .15); 
    transform: translateY(0);
  }
}